// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	model "github.com/nix-united/golang-gin-boilerplate/internal/model"

	mock "github.com/stretchr/testify/mock"
)

// UsersRepository is an autogenerated mock type for the UsersRepository type
type UsersRepository struct {
	mock.Mock
}

// FindUserByEmail provides a mock function with given fields: email
func (_m *UsersRepository) FindUserByEmail(email string) (model.User, error) {
	ret := _m.Called(email)

	var r0 model.User
	if rf, ok := ret.Get(0).(func(string) model.User); ok {
		r0 = rf(email)
	} else {
		r0 = ret.Get(0).(model.User)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FindUserById provides a mock function with given fields: ID
func (_m *UsersRepository) FindUserByID(ID int) model.User {
	ret := _m.Called(ID)

	var r0 model.User
	if rf, ok := ret.Get(0).(func(int) model.User); ok {
		r0 = rf(ID)
	} else {
		r0 = ret.Get(0).(model.User)
	}

	return r0
}

// StoreUser provides a mock function with given fields: user
func (_m *UsersRepository) StoreUser(user model.User) error {
	ret := _m.Called(user)

	var r0 error
	if rf, ok := ret.Get(0).(func(model.User) error); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
